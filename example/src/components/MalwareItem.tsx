import { addToWhitelist, SuspiciousAppInfo } from 'capacitor-freerasp';
import React from 'react';
import { useState } from 'react';
import {
  IonText,
  IonImg,
  IonCardContent,
  IonCard,
  IonRow,
  IonButton,
  IonIcon,
} from '@ionic/react';
import './MalwareItem.css';
import '../theme/variables.css';
import { chevronDown, chevronUp } from 'ionicons/icons';

export const MalwareItem: React.FC<{ app: SuspiciousAppInfo }> = ({ app }) => {
  const [expanded, setExpanded] = useState<boolean>(false);

  const appUninstall = async () => {
    alert('Implement yourself!');
  };

  const whitelistApp = async (packageName: string) => {
    try {
      const whitelistResponse = await addToWhitelist(packageName);
      console.info(
        `Malware Whitelist response for ${app}: ${whitelistResponse}`,
      );
      alert('Restart app for whitelist to take effect');
    } catch (error: any) {
      console.info('Error while adding app to malware whitelist: ', error);
    }
  };

  return (
    <IonCard className="malwareCard">
      <IonCardContent>
        <IonCard
          className="malwareCard malwareCardInner"
          onClick={() => setExpanded(!expanded)}
        >
          <IonRow>
            <IonImg
              className="icon centered"
              src={`data:image/png;base64,${app.packageInfo.appIcon}`}
            />
            <div className="titleTextContainer">
              <IonText className="titleText">{app.packageInfo.appName}</IonText>
            </div>

            <IonIcon
              md={expanded ? chevronUp : chevronDown}
              className="malwareIconTitle"
            />
          </IonRow>
        </IonCard>
        {expanded && (
          <>
            <div className="spacer" />
            <IonText className="listItemTitle">Package name:</IonText>
            <br />
            <IonText className="listItem">
              {app.packageInfo.packageName}
            </IonText>
            <br />
            <IonText className="listItemTitle">App name:</IonText>
            <br />
            <IonText className="listItem">
              {app.packageInfo.appName ?? 'Not specified'}
            </IonText>
            <br />
            <IonText className="listItemTitle">App version:</IonText>
            <br />
            <IonText className="listItem">
              {app.packageInfo.version ?? 'Not specified'}
            </IonText>
            <br />
            <IonText className="listItemTitle">App Icon:</IonText>
            {app.packageInfo.appIcon ? (
              <IonImg
                className="icon iconBig"
                src={`data:image/png;base64,${app.packageInfo.appIcon}`}
              />
            ) : (
              <>
                <IonText className="listItem">Not specified</IonText>
                <br />
              </>
            )}
            <IonText className="listItemTitle">Installer Store:</IonText>
            <br />
            <IonText className="listItem">
              {app.packageInfo.installerStore ?? 'Not specified'}
            </IonText>
            <br />
            <IonText className="listItemTitle">Detection reason:</IonText>
            <br />
            <IonText className="listItem">{app.reason}</IonText>
            <br />
            <IonRow className="buttonGroup">
              <IonButton
                className="controlButton"
                shape="round"
                size="default"
                onClick={() => whitelistApp(app.packageInfo.packageName)}
              >
                Add to whitelist
              </IonButton>
              <IonButton
                className="controlButton"
                shape="round"
                size="default"
                onClick={appUninstall}
              >
                Uninstall
              </IonButton>
            </IonRow>
          </>
        )}
      </IonCardContent>
    </IonCard>
  );
};
